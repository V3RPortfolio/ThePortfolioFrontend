name: Deploy Angular

on:
    workflow_dispatch: {}


env:
  HOST: '${{ secrets.HOST }}'
  USERNAME: '${{ secrets.USERNAME }}'
  PASSWORD: '${{ secrets.PASSWORD }}'
  WORDPRESS_BACKEND_API: '${{ vars.WORDPRESS_BACKEND_API }}'
  WORDPRESS_API_KEY: '${{ secrets.WORDPRESS_API_KEY }}'
  WORDPRESS_API_KEY_USERNAME: '${{ secrets.WORDPRESS_API_KEY_USERNAME }}'
  MODE: prod




jobs:
  deploy:
    name: Deploying Angular application
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v2

      - name: Create ssh directory
        run: mkdir ~/.ssh

      - name: Add ssh known hosts
        run: ssh-keyscan $HOST >> ~/.ssh/known_hosts

      - name: Copy contents of password to SSH key
        run: echo "$PASSWORD" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa && chmod 700 ~/.ssh


      - name: Generate env file
        run: |
            echo "MODE=$MODE" > .env
            echo "WORDPRESS_BACKEND_API=$WORDPRESS_BACKEND_API" >> .env
            echo "WORDPRESS_API_KEY=$WORDPRESS_API_KEY" >> .env
            echo "WORDPRESS_API_KEY_USERNAME=$WORDPRESS_API_KEY_USERNAME" >> .env
        working-directory: app
            
      - name: Setup Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.node-version}}
          cache: 'npm'
          cache-dependency-path: app/package-lock.json
        

      - name: Install dependencies
        run: npm ci
        working-directory: app
    
      - name: Install angular globally
        run: npm install -g @angular/cli
        working-directory: app
    
      - name: Build
        run: ng build
        working-directory: app

      - name: Copy application to server
        run: scp -r dist/my-app $USERNAME@$HOST:/angular/myapp
        working-directory: app